name: Build & Push

# Configures this workflow to run every time a change is pushed to the branch called `release`.
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types: [created]  
      
  workflow_dispatch:

# Defines two custom environment variables for the workflow. These are used for the Container registry domain, and a name for the Docker image that this workflow builds.
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

# There is a single job in this workflow. It's configured to run on the latest available version of Ubuntu.
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: inventarwerk
          POSTGRES_PASSWORD: inventarwerk
          POSTGRES_DB: inventarwerk
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U inventarwerk"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@3d100841f68d4548bf57e52eb27bd33ec5069f55
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@8e1d5461f02b7886d3c1a774bfbd873650445aa2
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Wait for Postgres to be ready
        run: |
          for i in {1..30}; do
            if pg_isready -h localhost -U inventarwerk; then
              echo "Postgres is ready"
              break
            fi
            sleep 2
          done

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@ca877d9245402d1537745e0e356eab47c3520991
        with:
          context: .
          driver-opts: |
            network=host
          buildkitd-flags: '--allow-insecure-entitlement network.host'
          build-args: |
            POSTGRES_URI=postgres://inventarwerk:inventarwerk@172.17.0.1:5432/inventarwerk
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true